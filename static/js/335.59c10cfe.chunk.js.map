{"version":3,"file":"static/js/335.59c10cfe.chunk.js","mappings":"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","sources":["../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs"],"sourcesContent":["var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n        }\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                child.animationState &&\n                    child.animationState.setActive(type, isActive);\n            });\n        }\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(AnimationType.Exit, !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n"],"names":["warning","invariant","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","_objectWithoutPropertiesLoose","sourceKeys","keys","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","values","register","delete","undefined","forEach","_","PresenceContext","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","callback","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","render","updateFeatures","HandoffAppearAnimations","animationState","animateChanges","isRefObject","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","isBrowser","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","isCSSVariable","getValueAsType","type","transform","int","number","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","degrees","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","alpha","originX","progressPercentage","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","AnimationType","addPointerEvent","addPointerInfo","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","Hover","HoverGesture","pipe","FocusGesture","arguments","isFocusVisible","matches","Focus","onFocus","onBlur","isNodeOrChild","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","Tap","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","onViewportEnter","InView","viewport","rootMargin","amount","once","fallback","threshold","isIntersecting","onViewportLeave","viewportFallback","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isZeroValueString","maxDefaults","applyDefaultFilter","slice","split","match","floatRegex","unit","defaultValue","functionRegex","filter","complex","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","percent","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","velocity","setMotionValue","hasValue","getValue","addValue","motionValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","ease","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","numValues","_value","defaultOffset","createInterpolator","interpolate","interpolator","flipTarget","reverse","safeMin","findSpring","envelope","derivative","bounce","mass","maxDuration","dampingRatio","clamp","undampedFreq","exponentialDecay","a","b","calcAngularFreq","c","exp","d","f","g","initialGuess","result","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","velocityPerSecond","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","stop","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","owner","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","parseFloat","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","Promise","resolve","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","then","willChange","animations","animationTypeState","getState","shouldBlockAnimation","hasAnimated","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","prevIsPresent","prevPresenceContext","exitAnimation","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","progress","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","template","xScale","yScale","averageScale","output","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isTransformDirty","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","SubscriptionManager","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","to","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","BoundingBoxDimension","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","unsubscribe","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parsed","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","apply","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","arr","item","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","originStats","analyseComplexValue","targetStats","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","isClamp","inputLength","progressInRange","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","init","useLayoutEffect","frameDuration","isFloat","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","getSize","eventManagers","passiveEffect","stopPassiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","r","substring","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","colorToken","numberToken","colors","colorRegex","numbers","tokenised","createTransformer","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}